
class Solution {
public:
    std::string destCity(std::vector<std::vector<std::string>>& paths) {
        std::unordered_set<std::string> startingCities;
        
        // Add all starting cities to the set
        for (const auto& path : paths) {
            startingCities.insert(path[0]);
        }
        
        // Find the destination city
        for (const auto& path : paths) {
            if (startingCities.find(path[1]) == startingCities.end()) {
                return path[1];
            }
        }
        
        return ""; // This line will never be reached due to the problem constraints
    }
};
